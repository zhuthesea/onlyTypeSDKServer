// Generated by CoffeeScript 1.10.0
(function() {
  var TestClass, should,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  should = require("should");

  TestClass = (function(superClass) {
    extend(TestClass, superClass);

    function TestClass() {
      this.initialize = bind(this.initialize, this);
      this.defaults = bind(this.defaults, this);
      return TestClass.__super__.constructor.apply(this, arguments);
    }

    TestClass.prototype.defaults = function() {
      return this.extend(TestClass.__super__.defaults.apply(this, arguments), {
        a: 1,
        b: 2
      });
    };

    TestClass.prototype.initialize = function() {
      should.exist(this.config.a);
      this.config.a.should.equal(1);
      should.exist(this.config.b);
      this.config.b.should.equal(2);
    };

    return TestClass;

  })(require("./index.js")());

  new TestClass();

  console.log("TESTS done!");

}).call(this);
